1 . นำ dataset ที่ได้มาจากการเตรียมมา train(มีขั้นตอนเพิ่มเติม cvat ลงบน Ubuntu) 
2 . นำ model ที่ได้มาใช้งานโดย ใช้ script python
	- ดึงภาพจากกล้องทุกๆ 25 เฟรม และ บันทึกเฟรมลงโฟลเดอร์ที่กำหนด
	- โหลดภาพจากโฟลเดอร์ตามที่กำหนดไว้
	- ใช้ model YOLO ONNX ทำ inference
	- ตรวจจับวัตถุที่อยู่ใน ROI ที่กำหนดไว้
	- คำนวณสัญญาณ main_signal และ sub_signal ตาม label ที่ตรวจจับได้
	- บันทึกลง database
3. build docker เพื่อรันไฟล์อัตโนมัติ

-------------------------------------------------------------------------------------------------------------------
โดยจะตีกรอบ roi ที่ machine แต่ละเครื่อง โดยเมื่อเกิดการ detect เจอที่ machine ที่อยู่ในกรอบ roi ที่เครื่องไหนก็จะบันทึกลงใน database ว่าตรวจเจอที่ machine เครื่องนั้น

database now : oven_machine --> oven_summary--> oven_summary_test --> oven_machine_sum_test, oven_fai_summary_hourly

--------------------------------------------------------------------------------------------------------------------
** แก้ไขเพิ่มเติม
1. เอา machine open มานับจำนวนทุกชั่วโมง p กับ f (hour, p and f, machine_name)---> oven_fai_summary_hourly
2. หาสาเหตุแยก machine เครื่อง 1 กับ 2 ให้แยกกัน ดูว่าทำไม machine_name มันมาทั้ง 2 (แก้โดยการ วนลูป แยกเครื่อง)
3. เพิ่ม machine_name เป็นรายชั่วโมง เช่น 12:00 machine_1 12 5 600 
				12:00 machine_2 11 6 700
